on:
  push:
    branches:
      - '**'

jobs:
  run-code-scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Install Salesforce CLI
        run: npm install @salesforce/cli --global

      - name: Install Scanner Plugin
        run: sf plugins install @salesforce/sfdx-scanner

      - name: Verify Salesforce CLI Installation
        run: sf --version

      - name: Verify Scanner Plugin Installation
        run: sf plugins --core

      - name: Get changed files
        id: get-changes
        run: |
          git fetch --unshallow || true
          if [ "$(git rev-list --count HEAD)" -gt "1" ]; then
            echo "Fetching changed files between HEAD~1 and HEAD"
            git diff --name-only HEAD~1 HEAD > changed_files.txt
          else
            echo "No previous commit to compare to." > changed_files.txt
          fi
          cat changed_files.txt

      - name: Run SFDX Scanner on Changed Files
        id: run-scanner
        run: |
          files=$(cat changed_files.txt | grep -E '\.cls$|\.lwc$' || true)
          echo "Files to scan: $files"
          if [ -n "$files" ]; then
            sf scanner:run --target "$files" --format json --outfile scanner-report.json || { echo "Scanner run failed"; exit 1; }
          else
            echo "No relevant files changed."
            touch scanner-report.json
          fi
        env:
          SF_LAZY_LOAD_MODULES: 'true'
          SF_AUTOUPDATE_DISABLE: 'true'
          SF_DISABLE_AUTOUPDATE: 'true'

      - name: Print scanner report JSON structure
        run: |
          if [ -f scanner-report.json ]; then
            echo "Displaying the scanner-report.json structure for debugging:"
            cat scanner-report.json
          else
            echo "No scanner report found."
            exit 1
          fi

      - name: Block commit if violations are found
        run: |
          if [ -f scanner-report.json ]; then
            # Adjust this according to the actual structure of your JSON report
            severity_fail_count=$(jq '[.violations[] | select(.severity == 3)] | length' scanner-report.json)
            echo "Severity 3 issues count: $severity_fail_count"
            if [ "$severity_fail_count" -gt 0 ]; then
              echo "Blocking your push due to severity 3 vulnerabilities found."
              exit 1
            else
              echo "No severity 3 vulnerabilities found. Proceeding."
            fi
          else
            echo "No scanner report found."
            exit 1
          fi

      - name: Upload Scanner Report
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: SFDX_Code_Scan_Report
          path: scanner-report.json