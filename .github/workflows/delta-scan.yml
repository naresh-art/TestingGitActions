name: SFDX Code Scan Delta
 
on:
  pull_request:
    branches:
      - '**'
 
jobs:
  installcli:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
 
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
 
      - name: Install CLI
        run: npm install @salesforce/cli --global
 
      - name: Install Scanner Plugin
        run: sf plugins install @salesforce/sfdx-scanner
 
      - name: Verify SFDX CLI Installation
        run: sf --version
 
      - name: Verify SFDX Scanner Plugin Installation
        run: sf plugins --core
 
      - name: Get changed files
        id: get-changes
        run: |
          git fetch --unshallow || true
          if [ "$(git rev-list --count HEAD)" -gt "1" ]; then
            echo "Fetching changed files between HEAD~1 and HEAD"
            git diff --name-only HEAD~1 HEAD > changed_files.txt
          else
            echo "No previous commit to compare to." > changed_files.txt
          fi
          cat changed_files.txt
 
      - name: Run SFDX Scanner on Changed Files
        if: success()
        run: |
            files=$(cat changed_files.txt | grep -E '\.cls$|\.lwc$' || true)
            echo "Files to scan: $files"
            if [ -n "$files" ]; then
              sf scanner:run --target "$files" --engine "pmd,eslint" --format "csv" --outfile "scanner-report.csv" || { echo "Scanner run failed"; exit 1; }
            else
              echo "No relevant files changed."
              touch scanner-report.csv
            fi
        env:
            SF_LAZY_LOAD_MODULES: 'true'
            SF_AUTOUPDATE_DISABLE: 'true'
            SF_DISABLE_AUTOUPDATE: 'true'
 
      - name: Encode CSV file to Base64
        if: success()
        id: encode_file
        run: |
          if [ -f scanner-report.csv ]; then
            base64 scanner-report.csv | tr -d '\n' > encoded_report.txt
          else
            echo "Scanner report CSV file not found."
            exit 1
          fi
 
      - name: Check Scanner Report Severity
        id: check_severity
        run: |
            if [ ! -f "scanner-report.csv" ]; then
              echo "Scanner report not found!"
              echo "QUALITY_GATE_STATUS=FAILED" >> $GITHUB_ENV
              echo "::error file=scanner-report.csv::Scanner report not found!"
              exit 1
            fi
            echo "Checking scanner report content:"
            cat scanner-report.csv
            # Count severity 3 issues
            SEVERITY_FAIL_COUNT=$(awk -F',' '{gsub(/^ *| *$/, "", $2); if($2 == "\"3\"") count++} END {print count}' scanner-report.csv)
            SEVERITY_FAIL_COUNT=${SEVERITY_FAIL_COUNT:-0}  
            echo "Severity 3 Count: $SEVERITY_FAIL_COUNT"
            if [ "$SEVERITY_FAIL_COUNT" -gt 0 ]; then
              echo "Quality gate failed due to high severity issues."
              echo "QUALITY_GATE_STATUS=FAILED" >> $GITHUB_ENV
              echo "::error::Quality gate failed due to high severity issues."
              exit 1  # Fail the workflow, blocking the PR
            else
              echo "Quality gate passed."
              echo "QUALITY_GATE_STATUS=PASSED" >> $GITHUB_ENV
              echo "::notice::Quality gate passed."
            fi
 
      - name: Upload Scanner Report as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: scanner-report.csv
          path: scanner-report.csv
 
      - name: Post PR Comment if Quality Gate Fails
        if: failure()
        uses: thollander/actions-comment-pull-request@v1
        with:
          message: "Quality gate failed due to high severity issues in the SFDX Code Scan. Please address these issues."
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 