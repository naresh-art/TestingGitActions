name: PR Approval to Salesforce Workflow

on:
  pull_request_review:
    types: [submitted]
  check_suite:
    types: [completed]

jobs:
  pr_approval:
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR is approved
        id: pr_approval_check
        run: |
          if [[ "${{ github.event.review.state }}" == "approved" ]]; then
            echo "PR Approved"
            echo "::set-output name=PR_STATUS::approved"
          else  
            echo "PR Not Approved"
            exit 1
          fi

      - name: Fetch all check runs for the PR
        if: steps.pr_approval_check.outputs.PR_STATUS == 'approved'
        id: fetch_checks
        run: |
          CHECK_RUNS=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/commits/${{ github.event.pull_request.head.sha }}/check-runs)

          echo "Check runs: $CHECK_RUNS"
          echo "$CHECK_RUNS" > check_runs.json

      - name: Get Artifact ID using REST API
        run: |
          ARTIFACT_ID=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/artifacts | jq -r '.artifacts[0].id')
          echo "Artifact ID: $ARTIFACT_ID"
          echo "::set-output name=ARTIFACT_ID::$ARTIFACT_ID"

      - name: Download Artifact using REST API
        run: |
          ARTIFACT_ID=${{ steps.fetch_checks.outputs.ARTIFACT_ID }}
          curl -L -o my-artifact.zip -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip

      - name: Extract Artifact
        run: unzip my-artifact.zip  

      - name: Attach Code Scan Report to Salesforce PR_Request__c
        if: steps.pr_approval_check.outputs.PR_STATUS == 'approved'
        run: |
          # Define file path for the downloaded artifact
          FILE_PATH="./scanner-report.csv"
          
          # Encode the artifact in base64 for file upload
          BASE64_CONTENT=$(base64 "$FILE_PATH")
          FILENAME="scanner-report.csv"

          # Create the PR Request in Salesforce
          prStatus=${{ steps.pr_approval_check.outputs.PR_STATUS }}
          prComment="${{ github.event.review.body }}"
          
          plRequestObjectResponse=$(curl -X POST https://individual-fc-dev-ed.develop.my.salesforce.com/services/data/v61.0/sobjects/Pull_Request__c/ \
            -H "Authorization: Bearer ${{ secrets.SF_ACCESS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
                "PR_Title__c": "'"${{ github.event.pull_request.title }}"'",
                "PR_Link__c": "'"${{ github.event.pull_request.html_url }}"'",
                "PR_Status__c": "'"$prStatus"'",
                "PR_Review_Comment__c": "'"$prComment"'",
                "PR_Author__c": "'"${{ github.event.pull_request.user.login }}"'",
                "PR_Reviewer__c": "'"${{ github.event.review.user.login }}"'",
                "PR_Check_Status__c": "'"${{ steps.process_checks.outputs.CHECK_STATUSES }}"'",
                "PR_Check_Name__c": "'"${{ steps.process_checks.outputs.CHECK_NAMES }}"'"
            }')

          echo "Response: $plRequestObjectResponse"
          PR_REQUEST_ID=$(echo "$plRequestObjectResponse" | jq -r '.id')

          # Attach the file to the PR_Request__c record in Salesforce
          attachmentResponse=$(curl -X POST https://individual-fc-dev-ed.develop.my.salesforce.com/services/data/v61.0/sobjects/Attachment/ \
            -H "Authorization: Bearer ${{ secrets.SF_ACCESS_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{
              "ParentId": "'"$PR_REQUEST_ID"'",
              "Name": "'"$FILENAME"'",
              "Body": "'"$BASE64_CONTENT"'",
              "ContentType": "text/csv"
            }')

          echo "Attachment response: $attachmentResponse"
